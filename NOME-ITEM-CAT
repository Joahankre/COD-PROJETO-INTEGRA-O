Sub Main()
    If Not TypeOf ThisDoc.Document Is DrawingDocument Then
        MessageBox.Show("Este código deve ser executado em um arquivo de desenho (.idw).", "Erro")
        Exit Sub
    End If

    Dim dwgDoc As DrawingDocument = ThisDoc.Document

    ' Obtém o BOM da montagem da primeira folha
    Dim BOMRows As BOMRowsEnumerator = GetBOMRows()
    If BOMRows Is Nothing Then
        MessageBox.Show("Não foi possível obter o BOM da montagem principal.", "Erro")
        Exit Sub
    End If

    ' Percorre todas as folhas do desenho
    For Each dwgSheet As Sheet In dwgDoc.Sheets
        If dwgSheet.DrawingViews.Count > 0 Then
            Dim refDoc As Document
            Try
                refDoc = dwgSheet.DrawingViews(1).ReferencedDocumentDescriptor.ReferencedDocument
            Catch ex As Exception
                MessageBox.Show("Erro ao acessar o modelo referenciado: " & ex.Message)
                Continue For
            End Try

            Dim fullFileName As String = dwgSheet.DrawingViews(1).ReferencedDocumentDescriptor.FullDocumentName
            Dim docFName As String = System.IO.Path.GetFileName(fullFileName)

            Dim prtNumber As String
            Try
                prtNumber = SanitizeText(iProperties.Value(docFName, "Project", "Part Number"))
            Catch
                prtNumber = "DESCONHECIDO"
            End Try

            Dim categoryRaw As String = ""
            Try
                categoryRaw = iProperties.Value(docFName, "Summary", "Category")
            Catch
                categoryRaw = ""
            End Try

            ' Extrai o último prefixo (ex: "MF")
            Dim categoryCode As String
            If InStr(categoryRaw, " - ") > 0 Then
                Dim parts() As String = Split(categoryRaw, " - ")
                categoryCode = Trim(parts(UBound(parts)))
            Else
                categoryCode = Trim(categoryRaw)
            End If

            ' Busca o Item Number no BOM
            Dim itemNumber As String = SearchBOMByPartNumber(BOMRows, prtNumber)
            If itemNumber = "" Then itemNumber = "N/A"

            ' Limita o Part Number a no máximo 25 caracteres
            If Len(prtNumber) > 25 Then
                prtNumber = Left(prtNumber, 25)
            End If

            ' Monta o novo nome da folha com Category - ItemNumber - PartNumber
            Dim newSheetName As String = categoryCode & " - " & itemNumber & " - " & prtNumber
            If IsAssemblyDocument(docFName) And Not newSheetName.EndsWith("ASS'Y") Then
                newSheetName = newSheetName & " ASS'Y"
            End If

            dwgSheet.Name = newSheetName
        End If
    Next
End Sub

' ==============================================
Function GetBOMRows() As BOMRowsEnumerator
    On Error GoTo ErrHandler

    Dim dwgDoc As DrawingDocument = ThisDoc.Document
    Dim firstSheet As Sheet = dwgDoc.Sheets.Item(1)
    If firstSheet.DrawingViews.Count = 0 Then GoTo ErrHandler

    Dim refDoc As Document = firstSheet.DrawingViews(1).ReferencedDocumentDescriptor.ReferencedDocument
    If Not TypeOf refDoc Is AssemblyDocument Then GoTo ErrHandler

    Dim asmDoc As AssemblyDocument = refDoc

    With asmDoc.ComponentDefinition.BOM
        .StructuredViewEnabled = True
        .StructuredViewFirstLevelOnly = False
        GetBOMRows = .BOMViews.Item("Structured").BOMRows
    End With
    Exit Function

ErrHandler:
    GetBOMRows = Nothing
End Function

' ==============================================
Function SearchBOMByPartNumber(rows As BOMRowsEnumerator, targetPartNumber As String) As String
    For Each row As BOMRow In rows
        Dim def As ComponentDefinition = Row.ComponentDefinitions.Item(1)
        Dim rowPartNumber As String = def.Document.PropertySets.Item("Design Tracking Properties")("Part Number").Value
        If UCase(rowPartNumber) = UCase(targetPartNumber) Then
            SearchBOMByPartNumber = Row.ItemNumber
            Exit Function
        End If
        If Not Row.ChildRows Is Nothing Then
            SearchBOMByPartNumber = SearchBOMByPartNumber(Row.ChildRows, targetPartNumber)
            If SearchBOMByPartNumber <> "" Then Exit Function
        End If
    Next
    SearchBOMByPartNumber = ""
End Function

' ==============================================
Function SanitizeText(inputText As String) As String
    On Error GoTo HandleError
    Dim sanitizedText As String = inputText
    For i As Integer = 1 To Len(sanitizedText)
        If Not Mid(sanitizedText, i, 1) Like "[A-Za-z0-9 ]" Then
            sanitizedText = Replace(sanitizedText, Mid(sanitizedText, i, 1), ".")
        End If
    Next i
    SanitizeText = sanitizedText
    Exit Function
HandleError:
    SanitizeText = "ERRO"
End Function

Function IsAssemblyDocument(docName As String) As Boolean
    Dim fileExtension As String = System.IO.Path.GetExtension(docName).ToUpper()
    Return fileExtension = ".IAM"
End Function
