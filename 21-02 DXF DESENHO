Sub Main()
    Dim oDoc As DrawingDocument = ThisApplication.ActiveDocument

    If oDoc.DocumentType <> DocumentTypeEnum.kDrawingDocumentObject Then
        MessageBox.Show("Este não é um documento de desenho.")
        Return
    End If

    ' === Pedir código do cliente ===
    Dim prefixoCliente As String = InputBox("Informe o código do cliente:", "Código do Cliente")
    If String.IsNullOrWhiteSpace(prefixoCliente) Then
        MessageBox.Show("Código do cliente inválido.")
        Return
    End If

    ' === Pedir pasta de destino para salvar os DXFs ===
    Dim pastaDestino As String = SelecionarPasta()
    If String.IsNullOrEmpty(pastaDestino) Then
        MessageBox.Show("Exportação cancelada pelo usuário.")
        Return
    End If

    Dim listaReferencias As New List(Of Tuple(Of String, String)) ' (FullFileName, SheetName)

    ' === Coletar todos os arquivos Sheet Metal referenciados no desenho ===
    For Each drawSheet As Sheet In oDoc.Sheets
        For Each drawView As DrawingView In drawSheet.DrawingViews
            Dim refDoc As Document = Nothing
            Try
                refDoc = drawView.ReferencedDocumentDescriptor.ReferencedDocument
            Catch
                Continue For
            End Try

            If refDoc IsNot Nothing AndAlso refDoc.DocumentType = DocumentTypeEnum.kPartDocumentObject Then
                If refDoc.DocumentSubType.DocumentSubTypeID = "{9C464203-9BAE-11D3-8BAD-0060B0CE6BB4}" Then
                    Dim caminho As String = refDoc.FullFileName
                    Dim nomeFolha As String = drawSheet.Name
                    If Not listaReferencias.Any(Function(t) t.Item1 = caminho) Then
                        listaReferencias.Add(Tuple.Create(caminho, nomeFolha))
                    End If
                End If
            End If
        Next
    Next

    If listaReferencias.Count = 0 Then
        MessageBox.Show("Nenhuma peça Sheet Metal encontrada no desenho.")
        Return
    End If

    ' === Loop pelos arquivos Sheet Metal ===
    For Each item In listaReferencias
        Dim caminhoSM As String = item.Item1
        Dim sheetName As String = item.Item2

        Try
            Dim partDoc As PartDocument = ThisApplication.Documents.Open(caminhoSM, True)
            partDoc.Activate()

            Dim smDef As SheetMetalComponentDefinition = TryCast(partDoc.ComponentDefinition, SheetMetalComponentDefinition)
            If smDef Is Nothing Then
                MessageBox.Show("O arquivo " & partDoc.DisplayName & " não é um componente Sheet Metal.")
                partDoc.Close(False)
                Continue For
            End If

            ' === Abrir ou editar o Flat Pattern ===
            If Not smDef.HasFlatPattern Then
                smDef.Unfold()
            Else
                smDef.FlatPattern.Edit()
            End If

            ' === Centralizar vista ===
            ThisApplication.ActiveView.Fit()

            ' === Solicitar ao usuário para selecionar a face desejada ===
            ThisApplication.StatusBarText = "Selecione a face do Flat Pattern para exportar como DXF"
            Dim entidadeSelecionada As Object = Nothing

            Try
                entidadeSelecionada = ThisApplication.CommandManager.Pick(SelectionFilterEnum.kPartFaceFilter, _
                    "Clique na face do Flat Pattern para exportar para DXF")
            Catch ex As Exception
                MessageBox.Show("Seleção cancelada. Pulando esta peça.")
                partDoc.Close(False)
                Continue For
            End Try

            If entidadeSelecionada Is Nothing Then
                MessageBox.Show("Nenhuma face foi selecionada. Pulando esta peça.")
                partDoc.Close(False)
                Continue For
            End If

            partDoc.SelectSet.Clear()
            partDoc.SelectSet.Select(entidadeSelecionada)

            ' === Montar nome do DXF com lógica personalizada ===

            ' Obter número da folha
            Dim pageNumber As String = "000"
            If sheetName.Contains(":") Then
                pageNumber = sheetName.Substring(sheetName.LastIndexOf(":") + 1).PadLeft(3, "0"c)
            End If

            ' Obter quantidade personalizada
            Dim qtdePersonalizada As String = "001"
            Try
                qtdePersonalizada = partDoc.PropertySets.Item("User Defined Properties").Item("QTDE PERSONALIZADA").Value.ToString()
            Catch
            End Try
            Dim formattedQtde As String = qtdePersonalizada.PadLeft(3, "0"c) & "X"

            ' Obter espessura
            Dim thickness As String = "0.00"
            Try
                thickness = partDoc.PropertySets.Item("User Defined Properties").Item("Thickness").Value.ToString()
            Catch
            End Try
            Dim formattedThickness As String = thickness.Replace(" mm", "").Trim()

            ' Nome final do arquivo
            Dim nomeFinal As String = prefixoCliente & "-" & pageNumber & "-#" & formattedThickness & "-" & formattedQtde & ".dxf"
            nomeFinal = nomeFinal.Replace(" ", "_")
            Dim caminhoCompletoDXF As String = System.IO.Path.Combine(pastaDestino, nomeFinal)

            ' === Definir caminho do DXF via evento interno ===
            ThisApplication.CommandManager.PostPrivateEvent(kFileNameEvent, caminhoCompletoDXF)

            ' === Executar comando GeomToDXFCommand ===
            Dim oCtrlDef As ButtonDefinition = ThisApplication.CommandManager.ControlDefinitions.Item("GeomToDXFCommand")
            oCtrlDef.Execute()

            ThisApplication.StatusBarText = "DXF exportado: " & nomeFinal

            ' === Fechar o IPT após exportar ===
            partDoc.Close(True)

        Catch ex As Exception
            MessageBox.Show("Erro ao processar: " & caminhoSM & vbCrLf & ex.Message, "Erro")
        End Try
    Next

    MessageBox.Show("Exportação DXF concluída para todas as peças Sheet Metal.", "Concluído")
End Sub

Function SelecionarPasta() As String
    Dim pastaSelecionada As String = ""
    Try
        Dim dialog As New System.Windows.Forms.FolderBrowserDialog()
        dialog.Description = "Selecione a pasta para salvar os arquivos DXF"
        dialog.ShowNewFolderButton = True
        If dialog.ShowDialog() = System.Windows.Forms.DialogResult.OK Then
            pastaSelecionada = dialog.SelectedPath
        End If
    Catch ex As Exception
        MessageBox.Show("Erro ao selecionar pasta: " & ex.Message)
    End Try
    Return pastaSelecionada
End Function


